app whaTym {
  wasp: {
    version: "^0.13.2"
  },
  title: "whaTym",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id          Int          @id @default(autoincrement())
    teamMembers TeamMember[]
psl=}

entity TeamMember {=psl
    id       Int    @id @default(autoincrement())
    name     String
    timezone String
    user     User   @relation(fields: [userId], references: [id])
    userId   Int
psl=}

action addTeamMember {
  fn: import { addTeamMember } from "@src/actions.js",
  entities: [User, TeamMember]
}

action deleteTeamMember {
  fn: import { deleteTeamMember } from "@src/actions.js",
  entities: [User, TeamMember]
}

query getTeamMembers {
  fn: import { getTeamMembers } from "@src/queries.js",
  entities: [User, TeamMember]
}

query getUser {
  fn: import { getUser } from "@src/queries.js",
  entities: [User]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}
